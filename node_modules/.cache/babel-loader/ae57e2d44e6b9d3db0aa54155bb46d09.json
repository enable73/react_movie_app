{"ast":null,"code":"var _jsxFileName = \"/Users/jungwoungkim/movie_app/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // 외부 폴더에 컴포넌트 파일을 만들 수도 있지만 학습 편의성 위해서 내부에\n// Movie_list 컴포넌트의 propos를 name으로 만들어서 사용하는 \n\nfunction Movie(props) {\n  //props를 argument로 사용\n  console.log(\"컴퍼넌트의 props\", props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \" My favorite movie is  \", props.name, \"  \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.feedback), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.poster_image,\n    alt: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n}\n\n; //propos 값과 상태를 체크하고 디버그에 도움을 주는 라이브러리 propTypes\n\nMovie.propTypes = {\n  name: PropTypes.string.isRequired,\n  poster_image: PropTypes.string.isRequired,\n  feedback: PropTypes.number.isRequired\n}; //map에서 사용할 함수 \n\nfunction render_map(data) {\n  console.log(\"map 오브젝트 데이터\", data);\n  return /*#__PURE__*/React.createElement(Movie, {\n    key: data.id,\n    name: data.name,\n    poster_image: data.image_url,\n    feedback: data.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n}\n\n; // 컴포넌트들을 호출해서 조립\n// 중요 아래의 data는 오브젝트 이다. movie_list 어레이에서 차례대로 받아서 만들어지는 오브젝트이다.\n// 일반 자바스크립트 처럼 오브젝트 내에서도 object.name, object.image를 갖고 있는 것이다.\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, movie_list.map(render_map), console.log(\"리액트 오브젝트\", movie_list.map(render_map)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jungwoungkim/movie_app/src/App.js"],"names":["React","PropTypes","Movie","props","console","log","name","feedback","poster_image","propTypes","string","isRequired","number","render_map","data","id","image_url","rating","App","movie_list","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAGA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4BA,KAAK,CAACG,IAAlC,OADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,QAAX,CAFF,eAGE;AAAK,IAAA,GAAG,EAAIJ,KAAK,CAACK,YAAlB;AAAgC,IAAA,GAAG,EAAIL,KAAK,CAACG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADJ;AAME;;AAAA,C,CAEJ;;AACAJ,KAAK,CAACO,SAAN,GAAkB;AAChBH,EAAAA,IAAI,EAAGL,SAAS,CAACS,MAAV,CAAiBC,UADR;AAEhBH,EAAAA,YAAY,EAAGP,SAAS,CAACS,MAAV,CAAiBC,UAFhB;AAGhBJ,EAAAA,QAAQ,EAAGN,SAAS,CAACW,MAAV,CAAiBD;AAHZ,CAAlB,C,CAOA;;AACA,SAASE,UAAT,CAAoBC,IAApB,EAAyB;AACvBV,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BS,IAA3B;AACA,sBAAO,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAIA,IAAI,CAACC,EAAnB;AAAuB,IAAA,IAAI,EAAID,IAAI,CAACR,IAApC;AAA0C,IAAA,YAAY,EAAIQ,IAAI,CAACE,SAA/D;AAA0E,IAAA,QAAQ,EAAEF,IAAI,CAACG,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAAA,C,CAKD;AACA;AACA;;AACA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,CAACC,GAAX,CAAeP,UAAf,CADH,EAEGT,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBc,UAAU,CAACC,GAAX,CAAeP,UAAf,CAAxB,CAFH,CADF;AAMD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n// 외부 폴더에 컴포넌트 파일을 만들 수도 있지만 학습 편의성 위해서 내부에\n// Movie_list 컴포넌트의 propos를 name으로 만들어서 사용하는 \nfunction Movie(props){          //props를 argument로 사용\n  console.log(\"컴퍼넌트의 props\", props);\n  return (\n      <div> \n        <h1> My favorite movie is  {props.name}  </h1> \n        <h4>{props.feedback}</h4>\n        <img src = {props.poster_image} alt = {props.name}/> \n      </div>\n  )};\n\n//propos 값과 상태를 체크하고 디버그에 도움을 주는 라이브러리 propTypes\nMovie.propTypes = {\n  name : PropTypes.string.isRequired,\n  poster_image : PropTypes.string.isRequired,\n  feedback : PropTypes.number.isRequired,\n};\n\n\n//map에서 사용할 함수 \nfunction render_map(data){\n  console.log(\"map 오브젝트 데이터\",data);\n  return <Movie key = {data.id} name = {data.name} poster_image = {data.image_url} feedback={data.rating}/>\n};\n\n\n\n\n// 컴포넌트들을 호출해서 조립\n// 중요 아래의 data는 오브젝트 이다. movie_list 어레이에서 차례대로 받아서 만들어지는 오브젝트이다.\n// 일반 자바스크립트 처럼 오브젝트 내에서도 object.name, object.image를 갖고 있는 것이다.\nfunction App() {\n  return (\n    <div>\n      {movie_list.map(render_map)}\n      {console.log(\"리액트 오브젝트\", movie_list.map(render_map))}\n    </div>\n  )\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}