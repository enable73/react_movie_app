{"ast":null,"code":"var _jsxFileName = \"/Users/jungwoungkim/movie_app/src/App.js\";\nimport React from 'react'; // 외부 폴더에 컴포넌트 파일을 만들 수도 있지만 학습 편의성 위해서 내부에\n// Movie_list 컴포넌트의 propos를 name으로 만들어서 사용하는 \n\nfunction Movie(props) {\n  //props를 argument로 사용\n  console.log(\"컴퍼넌트의 props\", props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \" My favorite movie is  \", props.name, \"  \"), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.poster_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n}\n\n; //map에서 사용할 함수 \n\nfunction render_map(data) {\n  console.log(\"map 오브젝트 데이터\", data);\n  return /*#__PURE__*/React.createElement(Movie, {\n    id: data.id,\n    name: data.name,\n    poster_image: data.image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  });\n}\n\n; //array를 이용해서 동적 데이터 가공 연습\n//단, 리액트 오브젝트에서 가공을 할 때에 유니크한 키 값을 요구하기 때문에 각 어레이 데이터 마다 id 값을 넣는다\n\nconst movie_list = [{\n  id: 1,\n  name: \"batman\",\n  image_url: \"https://res.klook.com/images/fl_lossy.progressive,q_65/c_fill,w_1295,h_720,f_auto/w_80,x_15,y_15,g_south_west,l_klook_water/activities/e1a5dba7-Batman-Dark-Flight/%EB%A7%88%EC%B9%B4%EC%98%A4%EB%B0%B0%ED%8A%B8%EB%A7%A8%EB%8B%A4%ED%81%AC%ED%94%8C%EB%9D%BC%EC%9D%B4%ED%8A%B8%ED%8B%B0%EC%BC%93.jpg\"\n}, {\n  id: 2,\n  name: \"ironman\",\n  image_url: \"https://assets1.ignimgs.com/2019/04/01/ironmanvr-blogroll-1554158268175.jpg?width=1280\"\n}, {\n  id: 3,\n  name: \"superman\",\n  image_url: \"https://i.guim.co.uk/img/media/fb18c7fae89eba7df3adc05dd73868c9919e3abb/0_131_4000_2400/master/4000.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=ec9617bbb167fce941f33c09ae4937a3\"\n}]; // 컴포넌트들을 호출해서 조립\n// 중요 아래의 data는 오브젝트 이다. movie_list 어레이에서 차례대로 받아서 만들어지는 오브젝트이다.\n// 일반 자바스크립트 처럼 오브젝트 내에서도 object.name, object.image를 갖고 있는 것이다.\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, movie_list.map(render_map), console.log(\"리액트 오브젝트\", movie_list.map(render_map)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jungwoungkim/movie_app/src/App.js"],"names":["React","Movie","props","console","log","name","poster_image","render_map","data","id","image_url","movie_list","App","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4BA,KAAK,CAACG,IAAlC,OADF,eAEE;AAAK,IAAA,GAAG,EAAIH,KAAK,CAACI,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ;AAKE;;AAAA,C,CAEJ;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvBL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BI,IAA3B;AACA,sBAAO,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAIA,IAAI,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAID,IAAI,CAACH,IAAnC;AAAyC,IAAA,YAAY,EAAIG,IAAI,CAACE,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAAA,C,CAED;AACA;;AACA,MAAMC,UAAU,GAAG,CACjB;AACEF,EAAAA,EAAE,EAAG,CADP;AAEEJ,EAAAA,IAAI,EAAG,QAFT;AAGEK,EAAAA,SAAS,EAAG;AAHd,CADiB,EAMnB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIJ,EAAAA,IAAI,EAAG,SAFX;AAGIK,EAAAA,SAAS,EAAG;AAHhB,CANmB,EAWnB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIJ,EAAAA,IAAI,EAAG,UAFX;AAGIK,EAAAA,SAAS,EAAG;AAHhB,CAXmB,CAAnB,C,CAoBA;AACA;AACA;;AACA,SAASE,GAAT,GAAe;AACb,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACE,GAAX,CAAeN,UAAf,CADH,EAEGJ,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,UAAU,CAACE,GAAX,CAAeN,UAAf,CAAxB,CAFH,CADF;AAMD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\n\n\n// 외부 폴더에 컴포넌트 파일을 만들 수도 있지만 학습 편의성 위해서 내부에\n// Movie_list 컴포넌트의 propos를 name으로 만들어서 사용하는 \nfunction Movie(props){          //props를 argument로 사용\n  console.log(\"컴퍼넌트의 props\", props);\n  return (\n      <div> \n        <h1> My favorite movie is  {props.name}  </h1> \n        <img src = {props.poster_image} /> \n      </div>\n  )};\n\n//map에서 사용할 함수 \nfunction render_map(data){\n  console.log(\"map 오브젝트 데이터\",data);\n  return <Movie id = {data.id} name = {data.name} poster_image = {data.image_url} />\n};\n\n//array를 이용해서 동적 데이터 가공 연습\n//단, 리액트 오브젝트에서 가공을 할 때에 유니크한 키 값을 요구하기 때문에 각 어레이 데이터 마다 id 값을 넣는다\nconst movie_list = [\n  { \n    id : 1,\n    name : \"batman\",\n    image_url : \"https://res.klook.com/images/fl_lossy.progressive,q_65/c_fill,w_1295,h_720,f_auto/w_80,x_15,y_15,g_south_west,l_klook_water/activities/e1a5dba7-Batman-Dark-Flight/%EB%A7%88%EC%B9%B4%EC%98%A4%EB%B0%B0%ED%8A%B8%EB%A7%A8%EB%8B%A4%ED%81%AC%ED%94%8C%EB%9D%BC%EC%9D%B4%ED%8A%B8%ED%8B%B0%EC%BC%93.jpg\"\n},\n{\n    id : 2,  \n    name : \"ironman\",\n    image_url : \"https://assets1.ignimgs.com/2019/04/01/ironmanvr-blogroll-1554158268175.jpg?width=1280\"\n},\n{\n    id : 3,\n    name : \"superman\",\n    image_url : \"https://i.guim.co.uk/img/media/fb18c7fae89eba7df3adc05dd73868c9919e3abb/0_131_4000_2400/master/4000.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=ec9617bbb167fce941f33c09ae4937a3\"\n}\n];\n\n\n\n// 컴포넌트들을 호출해서 조립\n// 중요 아래의 data는 오브젝트 이다. movie_list 어레이에서 차례대로 받아서 만들어지는 오브젝트이다.\n// 일반 자바스크립트 처럼 오브젝트 내에서도 object.name, object.image를 갖고 있는 것이다.\nfunction App() {\n  return (\n    <div>\n      {movie_list.map(render_map)}\n      {console.log(\"리액트 오브젝트\", movie_list.map(render_map))}\n    </div>\n  )\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}